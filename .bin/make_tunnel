#!/usr/bin/env zsh

hostname=$1                                                        # hostname сервера
hostip=$(getent hosts $hostname | awk '{ print $1 }' | head -n 1)  # ip сервера
defaultgateway=$(ip route | awk '/default/ { print $3 }')          # текущий гейтвей
if [[ -z $2 ]]; then mode="all"; else mode=$2; fi                  # режим (all, pandora, ...)

tunsource=192.168.0.201 # локальный адрес внутри тунеля
tunremote=192.168.0.101 # удалённый адрес внутри тунеля

#echo "hostname = $hostname"
#echo "hostip = $hostip"
#echo "defaultgateway = $defaultgateway"
#echo "mode = $mode"

if [ $hostip = $defaultgateway ]; then
  echo "Restore gateway first..."
  echo "Break"
  exit
fi

if [[ -n $(ip add | grep tun1) ]]; then
  echo "Tunnel already exists (tun1), kill it manually..."
  echo $(pgrep -laf 'ssh -NTCf -w 1:1')
  exit
fi

#local
sudo ssh -NTCf -w 1:1 $hostip

# remote
ssh -t d.mne.li "
sudo ip link set tun1 up
sudo ip addr add $tunremote/32 peer $tunsource dev tun1

sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE -s $tunsource
sudo iptables -I INPUT -i tun1 -j ACCEPT
sudo iptables -I FORWARD -i tun1 -j ACCEPT
sudo iptables -t nat -I PREROUTING -i tun1 -j ACCEPT
"

# local
sudo ip link set tun1 up
sudo ip addr add $tunsource/32 peer $tunremote dev tun1
sudo ip route add $hostip/32 via $defaultgateway > /dev/null

if [ $mode = "all" ]; then
  sudo ip route replace default via $tunremote"
elif [ $mode = "pandora" ]; then
  sudo ip route add 208.85.40.0/24 via $tunremote"
fi
